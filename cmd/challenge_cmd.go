package cmd

import (
	"awesomeProject/db"
	"context"
	"fmt"
	tgbotapi "github.com/go-telegram-bot-api/telegram-bot-api/v5"
	"log"
	"math/rand"
	"strconv"
	"time"
)

type ChallengeCmd struct {
	UserDAO db.UserDAO
	Name    []string
}

func (ChallengeCmd) Support(update tgbotapi.Update) bool {
	return update.Message != nil &&
		update.Message.IsCommand() &&
		update.Message.Command() == "challenge"
}

func (c ChallengeCmd) Handle(api *tgbotapi.BotAPI, update tgbotapi.Update) {
	msg := tgbotapi.NewMessage(
		update.FromChat().ID,
		"ü§°ü§°ü§° –ò—Ç–∞–∫, –Ω–∞—á–∏–Ω–∞–µ–º –∏—Å–∫–∞—Ç—å "+c.Name[1]+" –¥–Ω—è –≤ "+update.Message.Chat.Title,
	)

	_, err := api.Send(msg)
	if err != nil {
		log.Print("telegram error " + err.Error())
	}

	usernames, err := c.UserDAO.FindUsernamesInChat(
		context.TODO(),
		strconv.Itoa(int(update.FromChat().ID)),
	)

	var randMessage tgbotapi.MessageConfig
	if err != nil {
		log.Println("error find usernames in chat " + err.Error())

		randMessage = tgbotapi.NewMessage(
			update.FromChat().ID,
			"ü§°ü§°ü§° "+c.Name[0]+" –¥–Ω—è - —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫ –±–æ—Ç–∞, –ø–æ—Ç–æ–º—É —á—Ç–æ –ø—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞ —á—É—Ç—å –ø–æ–∑–∂–µ...",
		)
	} else {
		if len(usernames) < 2 {
			randMessage = tgbotapi.NewMessage(
				update.FromChat().ID,
				"ü§° –î–ª—è –≤—ã–±–æ—Ä–∞ "+c.Name[1]+" –¥–Ω—è –Ω—É–∂–Ω–æ —á—Ç–æ–±—ã –±—ã–ª–æ –Ω–µ –º–µ–Ω—å—à–µ 2 –∏–≥—Ä–æ–∫–æ–≤",
			)
		} else {
			rand.Seed(time.Now().UnixNano())

			randMessage = tgbotapi.NewMessage(
				update.FromChat().ID,
				"–ü–æ–∑–¥—Ä–∞–≤–ª—è—é!!! ü§°ü§°ü§° –¢—ã "+c.Name[0]+" –¥–Ω—è, @"+usernames[rand.Intn(len(usernames))],
			)
		}
	}

	_, err = api.Send(randMessage)
	if err != nil {
		fmt.Println("cannot send challenge message " + err.Error())
	}
}
